<link rel="stylesheet" type="text/css" href="<%- root %>/public/lib/datatables/datatables.min.css"/>

<style type="text/css">
    .limitador {
        justify-content: start;
    }

    .navbar {
        justify-content: start;
        background-color: #557DCC;
    }
    .form-control {
        color: #557DCC;
    }
</style>

<div class="admin">
    <nav class="navbar navbar-dark admin-filtro">
        <div class="admin-filtro-filtros-1">
            <label class="admin-filtro-titulos " for="id-filtro-func">
                Funcionário
            </label>
            <select id="id-filtro-func" class="form-control admin-filtro-select">
                <option selected>Funcionário</option>
                <option disabled>--------------------------------------</option>
                <% for (let contador = 0; contador < funcionarios.length; contador++) { %>
                    <option value="<%= contador + 1 %>"><%= funcionarios[contador].FuncNome %></option>
                <% } %>
            </select>
        </div>
        <div class="admin-filtro-filtros">
            <label class="admin-filtro-titulos" for="id-filtro-data1" >
                De
            </label>
            <input type="date" id="id-filtro-data1" class="form-control">
        </div>  
        <div class="admin-filtro-filtros" >
            <label class="admin-filtro-titulos" for="id-filtro-data2" class="form-control">
                Até
            </label>
            <input type="date" id="id-filtro-data2" class="form-control">
        </div> 
        <div class="admin-filtro-cadastrar">
            <button type="button" class="admin-filtro-buscar" onclick="filtrar();">Buscar <img src="<%- root %>/public/img/lupa.png"></button>
            <a type="button" href="<%- root %>/admin/funcionarios" class="admin-filtro-cadastrar-botao">Funcionários</a>
        </div>
    </nav>
    
    <div class="admin-tabela" id="tabela-container"></div>

    <div class="admin-tempo-trabalhado">Tempo Trabalhado: <span id="tempo-trabalhado"></span></div>
</div>

<script type="text/javascript" src="<%- root %>/public/lib/datatables/datatables.min.js"></script>
<script type="text/javascript" src="<%- root %>/public/js/datatables-custom.js"></script>

<script type="text/javascript">
    let tabela;

    function format2(x) {
        return (x < 10 ? "0" + x : x.toString());
    }

    function formatHHMM(m) {
        m = parseInt(m);
        if (isNaN(m)) {
            return "";
        }
        return format2(Math.trunc(m / 60)) + ":" + format2(m % 60);
    }

    function atualizarTabela(dados) {
        document.getElementById("tabela-container").innerHTML = '<table id="tabela" class="table table-striped table-hover"></table>';

        let totalMinutos = 0;
        for (let i = 0; i < dados.length; i++) {
            totalMinutos += dados[i].minutos_trabalhados;
        }

        document.getElementById("tempo-trabalhado").textContent = formatHHMM(totalMinutos);

        tabela = $("#tabela").DataTable({
            autoWidth: false,
            searching: false,
            language: tableLanguagePtBr,
            order: [
                [0, "asc"],
                [2, "asc"]
            ],
            buttons: [{
                extend: 'excel',
                text: 'Save current page',
                exportOptions: {
                    modifier: {
                        page: 'current'
                    }
                }
            }],
            columns: [
                { title: "ID", type: "number", data: "HorarioID" },
                {
                    title: "Funcionário",
                    data: "FuncNome",
                    render: function (data, type, row, meta) {
                        return `<button type="button" class="admin-filtro-func-botao"><img src="<%- root %>/public/img/user.png" width="30px"></button> ${data}`;
                    }
                },
                { title: "Entrada", type:"customdatetimeint", data: "HorarioEntrada" },
                { title: "Início Intervalo", type:"customdatetimeint", data: "HorarioIIntervalo" },
                { title: "Fim Intervalo", type:"customdatetimeint", data: "HorarioVIntervalo" },
                { title: "Saída", type:"customdatetimeint", data: "HorarioSaida" },
                {
                    title: "Tempo Intervalo",
                    type:"customtime",
                    data: function (row) {
                        return formatHHMM(row.minutos_intervalo);
                    }
                },
                {
                    title: "Tempo Trabalhado",
                    type:"customtime",
                    data: function (row) {
                        return formatHHMM(row.minutos_trabalhados);
                    }
                }
            ],
            data: dados
        });
        
        $("#tabela").on("click", "tbody button", function (e) {
            const botao = this,
                td = botao.parentNode,
                tr = td.parentNode,
                dado = tabela.row(tr).data();
                Swal.fire({
                    title: 'Dados do Funcionário',
                    html: '<div><p><b>Nome:</b> ' + dado.FuncNome + '</p><p><b>Email:</b> ' + dado.FuncEmail + '</p><p><b>Nascimento:</b> ' + dado.FuncNiver + '</p><p><b>Tipo da Conta:</b> ' + dado.TipoNome + '</b></div>',
                });
            
        });
    }

    async function buscarDados(funcionario, de, ate) {
        let dados;
        const response = await fetch("<%- root %>/admin/filtrar?funcionario=" + funcionario + "&de=" + encodeURIComponent(de) + "&ate=" + encodeURIComponent(ate));
        if (!response.ok) {
                processando = false;
                Swal.fire({
                    icon: 'error',
                    title: 'Ops..',
                    text: `Ocorreu um erro.`
                });
                return;
            }
        try {
            dados = await response.json();
            atualizarTabela(dados);
        } catch (ex) {
            Swal.fire({
                    icon: 'error',
                    title: 'Ops..',
                    text: `ERRO: ` + ex.message
                });
            return;
        }
        
    }

    function filtrar(){
        let funcionario = document.getElementById("id-filtro-func").value;
        let de = document.getElementById("id-filtro-data1").value;
        let ate = document.getElementById("id-filtro-data2").value;

        buscarDados(funcionario, de, ate);
    }

    buscarDados("", "", "");
</script>
